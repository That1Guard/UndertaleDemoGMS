<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = 0
down = 0
left = 0
right = 0
quit = 0
try_up = 0
try_down = 0
try_left = 0
try_right = 0
canquit = 1
h_skip = 0
j_xpos = 0
j_ypos = 0
j_dir = 0
j_fr = 0
j_fl = 0
j_fu = 0
j_fd = 0
j_fr_p = 0
j_fl_p = 0
j_fu_p = 0
j_fd_p = 0
for (i = 0; i &lt; 12; i += 1)
{
    j_prev[i] = 0
    j_on[i] = 0
}
global.button0 = 2
global.button1 = 1
global.button2 = 4
global.analog_sense = 0.15
global.analog_sense_sense = 0.01
global.joy_dir = 0
ini_open("config.ini")
b0_i = ini_read_real("joypad1", "b0", -1)
b1_i = ini_read_real("joypad1", "b1", -1)
b2_i = ini_read_real("joypad1", "b2", -1)
as_i = ini_read_real("joypad1", "as", -1)
jd_i = ini_read_real("joypad1", "jd", -1)
if (b0_i &gt;= 0)
    global.button0 = b0_i
if (b1_i &gt;= 0)
    global.button1 = b1_i
if (b2_i &gt;= 0)
    global.button2 = b2_i
if (as_i &gt;= 0)
    global.analog_sense = as_i
if (jd_i &gt;= 0)
    global.joy_dir = jd_i
ini_close()
debug_r = 0
debug_f = 0
j1 = 0
j2 = 0
ja = 0
j_ch = 0
jt = 0
spec_rtimer = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canquit == 1)
{
    if (quit &gt; 20)
        game_end()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1
if (jt == 0)
{
    if (j_ch != 2)
    {
        if joystick_exists(1)
            j_ch = 1
        else if (j_ch == 1)
            j_ch = 0
    }
}
if (jt == 4)
{
    if (j_ch != 1)
    {
        if joystick_exists(2)
            j_ch = 2
        else if (j_ch == 2)
            j_ch = 0
    }
}
jt += 1
if (jt &gt;= 8)
    jt = 0
if (j_ch &gt; 0)
{
    j_prev[0] = j_on[0]
    j_on[0] = joystick_check_button(j_ch, global.button0)
    if (j_on[0] == 1 &amp;&amp; j_prev[0] != j_on[0])
        keyboard_key_press(ord("Z"))
    if (j_on[0] == 0 &amp;&amp; j_prev[0] != j_on[0])
        keyboard_key_release(ord("Z"))
    j_prev[1] = j_on[1]
    j_on[1] = joystick_check_button(j_ch, global.button1)
    if (j_on[1] == 1 &amp;&amp; j_prev[1] != j_on[1])
        keyboard_key_press(ord("X"))
    if (j_on[1] == 0 &amp;&amp; j_prev[1] != j_on[1])
        keyboard_key_release(ord("X"))
    j_prev[2] = j_on[2]
    j_on[2] = joystick_check_button(j_ch, global.button2)
    if (j_on[2] == 1 &amp;&amp; j_prev[2] != j_on[2])
        keyboard_key_press(ord("C"))
    if (j_on[2] == 0 &amp;&amp; j_prev[2] != j_on[2])
        keyboard_key_release(ord("C"))
    j_fr_p = j_fr
    j_fl_p = j_fl
    j_fu_p = j_fu
    j_fd_p = j_fd
    j_fr = 0
    j_fl = 0
    j_fu = 0
    j_fd = 0
    if (global.joy_dir == 0 || global.joy_dir == 1)
    {
        j_xpos = joystick_xpos(j_ch)
        j_ypos = joystick_ypos(j_ch)
    }
    j_dir = joystick_direction(j_ch)
    if (global.joy_dir == 0 || global.joy_dir == 1)
    {
        if (j_dir == 101)
        {
            if (j_xpos &gt;= global.analog_sense)
                j_fr = 1
            if (j_xpos &lt;= (-global.analog_sense))
                j_fl = 1
            if (j_ypos &gt;= global.analog_sense)
                j_fd = 1
            if (j_ypos &lt;= (-global.analog_sense))
                j_fu = 1
        }
    }
    if (j_dir != 101)
    {
        if (j_dir == 100)
            j_fl = 1
        if (j_dir == 98)
            j_fd = 1
        if (j_dir == 102)
            j_fr = 1
        if (j_dir == 104)
            j_fu = 1
        if (j_dir == 99)
        {
            j_fr = 1
            j_fd = 1
        }
        if (j_dir == 97)
        {
            j_fd = 1
            j_fl = 1
        }
        if (j_dir == 103)
        {
            j_fu = 1
            j_fl = 1
        }
        if (j_dir == 105)
        {
            j_fu = 1
            j_fr = 1
        }
    }
    if (global.joy_dir == 0 || global.joy_dir == 2)
    {
        j_pov = joystick_pov(j_ch)
        if (j_pov == 0)
            j_fu = 1
        if (j_pov == 270)
            j_fl = 1
        if (j_pov == 90)
            j_fr = 1
        if (j_pov == 180)
            j_fd = 1
        if (j_pov == 315)
        {
            j_fu = 1
            j_fl = 1
        }
        if (j_pov == 45)
        {
            j_fu = 1
            j_fr = 1
        }
        if (j_pov == 225)
        {
            j_fd = 1
            j_fl = 1
        }
        if (j_pov == 135)
        {
            j_fd = 1
            j_fr = 1
        }
    }
    if (j_fr != j_fr_p &amp;&amp; j_fr == 1)
        keyboard_key_press(vk_right)
    if (j_fl != j_fl_p &amp;&amp; j_fl == 1)
        keyboard_key_press(vk_left)
    if (j_fd != j_fd_p &amp;&amp; j_fd == 1)
        keyboard_key_press(vk_down)
    if (j_fu != j_fu_p &amp;&amp; j_fu == 1)
        keyboard_key_press(vk_up)
    if (j_fr != j_fr_p &amp;&amp; j_fr == 0)
        keyboard_key_release(vk_right)
    if (j_fl != j_fl_p &amp;&amp; j_fl == 0)
        keyboard_key_release(vk_left)
    if (j_fd != j_fd_p &amp;&amp; j_fd == 0)
        keyboard_key_release(vk_down)
    if (j_fu != j_fu_p &amp;&amp; j_fu == 0)
        keyboard_key_release(vk_up)
}
up = 0
down = 0
left = 0
right = 0
if keyboard_check(vk_up)
    try_up = 1
if keyboard_check_released(vk_up)
    try_up = 0
if keyboard_check(vk_down)
    try_down = 1
if keyboard_check_released(vk_down)
    try_down = 0
if keyboard_check(vk_right)
    try_right = 1
if keyboard_check_released(vk_right)
    try_right = 0
if keyboard_check(vk_left)
    try_left = 1
if keyboard_check_released(vk_left)
    try_left = 0
if (global.osflavor == 1)
{
    if try_up
        up = keyboard_check_direct(vk_up)
    if try_down
        down = keyboard_check_direct(vk_down)
    if try_left
        left = keyboard_check_direct(vk_left)
    if try_right
        right = keyboard_check_direct(vk_right)
}
else
{
    if try_up
        up = keyboard_check(vk_up)
    if try_down
        down = keyboard_check(vk_down)
    if try_left
        left = keyboard_check(vk_left)
    if try_right
        right = keyboard_check(vk_right)
}
if keyboard_check_released(vk_up)
    up = 0
if keyboard_check_released(vk_down)
    down = 0
if keyboard_check_released(vk_left)
    left = 0
if keyboard_check_released(vk_right)
    right = 0
if keyboard_multicheck(2)
{
    if (global.flag[28] == 1)
    {
        if (instance_exists(OBJ_WRITER) &amp;&amp; (!instance_exists(obj_choicer)))
        {
            if (h_skip == 0)
            {
                keyboard_key_press(ord("X"))
                keyboard_key_press(ord("Z"))
            }
            if (h_skip == 1)
            {
                keyboard_key_release(ord("Z"))
                keyboard_key_release(ord("X"))
            }
            if (h_skip == 0)
                h_skip = 1
            else
                h_skip = 0
        }
    }
}
if (global.debug == true)
{
    if keyboard_check_pressed(ord("F"))
        room_speed = 200
}
if (global.debug == true)
{
    if keyboard_check_pressed(ord("W"))
        room_speed = 10
}
if keyboard_check_pressed(vk_f4)
{
    if window_get_fullscreen()
        window_set_fullscreen(false)
    else
        window_set_fullscreen(true)
}
if (canquit == 1)
{
    if (global.debug == true)
    {
        if (keyboard_check_pressed(ord("R")) &amp;&amp; instance_exists(obj_essaystuff) == 0)
        {
            debug_r += 1
            if (debug_r &gt; 5)
                game_restart()
            spec_rtimer = 1
        }
    }
    spec_rtimer += 1
    if (spec_rtimer &gt;= 6)
        debug_r = 0
    if keyboard_check(vk_escape)
    {
        quit += 1
        if (instance_exists(obj_quittingmessage) == 0)
            instance_create(0, 0, obj_quittingmessage)
    }
    else
        quit = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>SCR_GAMESTART</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0
image_speed = 0
jjjjjj = 0
repeat (20)
{
    global.tempvalue[jjjjjj] = 0
    jjjjjj += 1
}
ini_open("undertale.ini")
fskip = ini_read_real("FFFFF", "E", -1)
ftime = ini_read_real("FFFFF", "F", -1)
true_end = ini_read_real("EndF", "EndF", -1)
ini_close()
sksk = 0
if (fskip &gt;= 1 &amp;&amp; sksk == 0)
{
    global.filechoice = 8
    scr_load()
}
else if (sksk == 0)
    room_goto_next()
global.osflavor = 1
if (os_type != os_windows) then
    global.osflavor = 2
else if (os_browser != browser_not_a_browser) then
    global.osflavor = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug == true) then
{
    draw_set_color(c_white)
    draw_text(0, 0, round((time / 30)))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug == true) then
{
    gx = file_text_open_write("system_information_962")
    file_text_write_string(gx, "a")
    file_text_close(gx)
    if (global.steam_int == 1) then
    {
        if (!steam_file_exists("system_information_962"))
            steam_file_write_file("system_information_962", "system_information_962")
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug) {
    global.debug = false;
} else{
    global.debug = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//screen_save("screenshots/"+ string(obj_time.time)+"sc.PNG")
//room_speed=200
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

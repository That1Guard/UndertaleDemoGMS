<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stretchwidth = global.monsterinstance[global.mytarget].wd
stretchfactor = (stretchwidth / global.monstermaxhp[global.mytarget])
apparenthp = global.monsterhp[global.mytarget]
actualhp = global.monsterhp[global.mytarget]
maxhp = global.monstermaxhp[global.mytarget]
negative = 0
special = false
dmg = global.damage
alarm[0] = 1
i = 1
if (dmg != 0)
{
    vspeed = -4
    gravity = 0.5
    gravity_direction = 270
}
drawbar = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (i == 0)
    i = 1
else
    i = 0
if (apparenthp &gt; (actualhp - dmg))
    apparenthp -= (dmg / 15)
else
    apparenthp = (actualhp - dmg)
if (negative == 0)
{
    if (apparenthp &lt; 0)
        apparenthp = 0
}
alarm[0] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>thisnum = dmg
if (thisnum &gt;= 0)
{
    place = 0
    numadd = 10
    if (thisnum &gt;= numadd)
    {
        while (thisnum &gt;= numadd)
        {
            place += 1
            numadd *= 10
        }
    }
}
else
{
    thisnum = 0
    place = 0
}
thisnum2 = thisnum
for (i = place; i &gt;= 0; i -= 1)
{
    numnum[i] = floor((thisnum2 / power(10, i)))
    thisnum2 -= (numnum[i] * power(10, i))
}
if (thisnum &gt; 0)
{
    if (drawbar == 1)
    {
        draw_set_color(c_black)
        draw_rectangle((x - 1), (ystart + 7), (x + round(((global.monstermaxhp[global.mytarget] * stretchfactor) + 1))), (ystart + 21), false)
        draw_set_color(c_dkgray)
        draw_rectangle(x, (ystart + 8), (x + round((global.monstermaxhp[global.mytarget] * stretchfactor))), (ystart + 20), false)
        draw_set_color(c_lime)
        if (apparenthp &gt; 0)
            draw_rectangle(x, (ystart + 8), round((x + (apparenthp * stretchfactor))), (ystart + 20), false)
    }
    for (i = place; i &gt;= 0; i -= 1)
    {
        draw_set_color(c_red)
        if (stretchwidth &lt;= 120)
            draw_sprite_ext(spr_dmgnum_o, numnum[i], (((x + 30) - (i * 32)) + (place * 16)), (y - 28), 1, 1, 0, c_red, 1)
        else
            draw_sprite_ext(spr_dmgnum_o, numnum[i], ((((x - 30) + (stretchwidth / 2)) - (i * 32)) + (place * 16)), (y - 28), 1, 1, 0, c_red, 1)
    }
}
if (thisnum == 0)
{
    draw_set_color(c_white)
    if (special == false)
        draw_sprite_ext(spr_dmgmiss_o, 0, (x - 10), (y - 16), 1, 1, 0, c_silver, 1)
    if (special == true)
    {
        draw_set_color(c_red)
        draw_set_font(fnt_main)
        ex = choose(0, 1, 2, 3, 4, 5)
        if (ex == 0)
            draw_text((x - 10), (y - 10), "Don't worry about it.")
        if (ex == 1)
            draw_text((x - 10), (y - 10), "Absorbed")
        if (ex == 2)
            draw_text((x - 10), (y - 10), "I'm lovin' it.")
        if (ex == 3)
            draw_text((x - 10), (y - 10), "But it didn't work.")
        if (ex == 4)
            draw_text((x - 10), (y - 10), "nope")
        if (ex == 5)
            draw_text((x - 10), (y - 10), "FAILURE")
    }
}
if (y &gt; ystart)
{
    y = ystart
    vspeed = 0
    gravity = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>writingx = 0
writingy = 0

SCR_TEXTTYPE(global.typer)

x = round(x)
y = round(y)
doak = 0
stringno = 0
stringpos = 1 //which character of the string it starts on
lineno = 0 //default the line's vertical space
halt = false //if true, you must hit enter to continue
writingx = round(writingx)
writingy = round(writingy)
myx = writingx
myy = writingy
script_execute(SCR_TEXT, global.msc)
n = 0
while (global.msg[n] != "%%%")
{
    mystring[n] = global.msg[n]
    n += 1
}
originalstring = mystring[0]
dfy = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>textspeed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stringpos &lt; string_length(originalstring))
{
    stringpos += 1
    if (global.typer == 111)
        stringpos += 1
    alarm[0] = textspeed
    if (string_char_at(originalstring, stringpos) == "^" &amp;&amp; string_char_at(originalstring, (stringpos + 1)) != "0")
    {
        n = real(string_char_at(originalstring, (stringpos + 1)))
        alarm[0] = (n * 10)
    }
    else if (txtsound == snd_mtt1 || txtsound == snd_tem || txtsound == snd_wngdng1)
    {
        if (txtsound == snd_mtt1)
        {
            if (string_char_at(originalstring, stringpos) != "")
            {
                if (string_char_at(originalstring, stringpos) != "^")
                {
                    if (string_char_at(originalstring, stringpos) != "/")
                    {
                        if (string_char_at(originalstring, stringpos) != "%")
                        {
                            snd_stop(snd_mtt1)
                            snd_stop(snd_mtt2)
                            snd_stop(snd_mtt3)
                            snd_stop(snd_mtt4)
                            snd_stop(snd_mtt5)
                            snd_stop(snd_mtt6)
                            snd_stop(snd_mtt7)
                            snd_stop(snd_mtt8)
                            snd_stop(snd_mtt9)
                            rnsound = floor(random(9))
                            switch rnsound
                            {
                                case 0:
                                    snd_play(snd_mtt1)
                                    break
                                case 1:
                                    snd_play(snd_mtt2)
                                    break
                                case 2:
                                    snd_play(snd_mtt3)
                                    break
                                case 3:
                                    snd_play(snd_mtt4)
                                    break
                                case 4:
                                    snd_play(snd_mtt5)
                                    break
                                case 5:
                                    snd_play(snd_mtt6)
                                    break
                                case 6:
                                    snd_play(snd_mtt7)
                                    break
                                case 7:
                                    snd_play(snd_mtt8)
                                    break
                                case 8:
                                    snd_play(snd_mtt9)
                                    break
                            }

                        }
                    }
                }
            }
            stringpos += 2
        }
        if (txtsound == snd_wngdng1)
        {
            if (string_char_at(originalstring, stringpos) != "")
            {
                if (string_char_at(originalstring, stringpos) != "^")
                {
                    if (string_char_at(originalstring, stringpos) != "/")
                    {
                        if (string_char_at(originalstring, stringpos) != "%")
                        {
                            snd_stop(snd_wngdng1)
                            snd_stop(snd_wngdng2)
                            snd_stop(snd_wngdng3)
                            snd_stop(snd_wngdng4)
                            snd_stop(snd_wngdng5)
                            snd_stop(snd_wngdng6)
                            snd_stop(snd_wngdng7)
                            rnsound = floor(random(7))
                            switch rnsound
                            {
                                case 0:
                                    snd_play(snd_wngdng1)
                                    break
                                case 1:
                                    snd_play(snd_wngdng2)
                                    break
                                case 2:
                                    snd_play(snd_wngdng3)
                                    break
                                case 3:
                                    snd_play(snd_wngdng4)
                                    break
                                case 4:
                                    snd_play(snd_wngdng5)
                                    break
                                case 5:
                                    snd_play(snd_wngdng6)
                                    break
                                case 6:
                                    snd_play(snd_wngdng7)
                                    break
                            }

                        }
                    }
                }
            }
        }
        if (txtsound == snd_tem)
        {
            if (string_char_at(originalstring, stringpos) != "")
            {
                if (string_char_at(originalstring, stringpos) != "^")
                {
                    if (string_char_at(originalstring, stringpos) != "/")
                    {
                        if (string_char_at(originalstring, stringpos) != "%")
                        {
                            snd_stop(snd_tem)
                            snd_stop(snd_tem2)
                            snd_stop(snd_tem3)
                            snd_stop(snd_tem4)
                            snd_stop(snd_tem5)
                            snd_stop(snd_tem6)
                            rnsound = floor(random(6))
                            switch rnsound
                            {
                                case 0:
                                    snd_play(snd_tem)
                                    break
                                case 1:
                                    snd_play(snd_tem2)
                                    break
                                case 2:
                                    snd_play(snd_tem3)
                                    break
                                case 3:
                                    snd_play(snd_tem4)
                                    break
                                case 4:
                                    snd_play(snd_tem5)
                                    break
                                case 5:
                                    snd_play(snd_tem6)
                                    break
                            }

                        }
                    }
                }
            }
            stringpos += 1
        }
    }
    else if (string_char_at(originalstring, stringpos) != "")
    {
        if (string_char_at(originalstring, stringpos) != " ")
        {
            if (string_char_at(originalstring, stringpos) != "&amp;")
            {
                if (string_char_at(originalstring, stringpos) != "^")
                {
                    if (string_char_at(originalstring, (stringpos - 1)) != "^")
                    {
                        if (string_char_at(originalstring, stringpos) != "\")
                        {
                            if (string_char_at(originalstring, (stringpos - 1)) != "\")
                            {
                                if (string_char_at(originalstring, stringpos) != "/")
                                {
                                    if (string_char_at(originalstring, stringpos) != "%")
                                    {
                                        snd_stop(txtsound)
                                        snd_play(txtsound)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (string_char_at(originalstring, stringpos) == "&amp;")
        stringpos += 1
    if (string_char_at(originalstring, stringpos) == "\")
        stringpos += 2
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myletter = string_char_at(originalstring, stringpos)
if (shake &gt; 38) then
{
    speed = 2
    direction += 20
}
if (shake == 42) then
{
    speed = 4
    direction -= 19
}
if (halt == 3 || dfy == 1) then
    instance_destroy()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_multicheck_pressed(0) == 1) then
    event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (halt == true)
{
    myletter = " "
    stringpos = 1
    stringno += 1
    originalstring = mystring[stringno]
    myx = writingx
    myy = writingy
    lineno = 0
    halt = false
    alarm[0] = textspeed
}
if (halt == 2)
    instance_destroy()
if (halt == 4)
{
    global.myfight = 0
    global.mnfight = 1
    keyboard_clear(vk_return)
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myx = writingx
myy = writingy
n = 1
while (n &lt; (stringpos + 1))
{
    nskip = 0
    if (string_char_at(originalstring, n) == "&amp;")
    {
        script_execute(SCR_NEWLINE)
        n += 1
    }
    if (string_char_at(originalstring, n) == "^")
    {
        if (string_char_at(originalstring, (n + 1)) == "0")
            nskip = 1
        else
            n += 2
    }
    if (string_char_at(originalstring, n) == "\")
    {
        if (string_char_at(originalstring, (n + 1)) == "R")
            mycolor = c_red
        if (string_char_at(originalstring, (n + 1)) == "G")
            mycolor = c_lime
        if (string_char_at(originalstring, (n + 1)) == "W")
            mycolor = c_white
        if (string_char_at(originalstring, (n + 1)) == "Y")
            mycolor = c_yellow
        if (string_char_at(originalstring, (n + 1)) == "X")
            mycolor = c_black
        if (string_char_at(originalstring, (n + 1)) == "B")
            mycolor = c_blue
        if (string_char_at(originalstring, (n + 1)) == "O")
            mycolor = c_orange
        if (string_char_at(originalstring, (n + 1)) == "L")
            mycolor = $FFA914
        if (string_char_at(originalstring, (n + 1)) == "P")
            mycolor = c_fuchsia
        if (string_char_at(originalstring, (n + 1)) == "p")
            mycolor = $D4BBFF
        if (string_char_at(originalstring, (n + 1)) == "C")
        {
            if (global.inbattle == 0)
            {
                if (instance_exists(obj_choicer) == 0)
                    choicer = instance_create(0, 0, obj_choicer)
                choicer.creator = id
                halt = 5
            }
        }
        if (string_char_at(originalstring, (n + 1)) == "M")
        {
            global.flag[20] = real(string_char_at(originalstring, (n + 2)))
            n += 1
        }
        if (string_char_at(originalstring, (n + 1)) == "E")
        {
            global.faceemotion = real(string_char_at(originalstring, (n + 2)))
            n += 1
        }
        if (string_char_at(originalstring, (n + 1)) == "F")
        {
            global.facechoice = real(string_char_at(originalstring, (n + 2)))
            global.facechange = 1
            n += 1
        }
        if (string_char_at(originalstring, (n + 1)) == "T")
        {
            newtyper = string_char_at(originalstring, (n + 2))
            if (newtyper == "T")
                global.typer = 4
            if (newtyper == "t")
                global.typer = 48
            if (newtyper == "0")
                global.typer = 5
            if (newtyper == "S")
                global.typer = 10
            if (newtyper == "F")
                global.typer = 16
            if (newtyper == "s")
                global.typer = 17
            if (newtyper == "P")
                global.typer = 18
            if (newtyper == "M")
                global.typer = 27
            if (newtyper == "U")
                global.typer = 37
            if (newtyper == "A")
                global.typer = 47
            if (newtyper == "a")
                global.typer = 60
            if (newtyper == "R")
                global.typer = 76
            script_execute(SCR_TEXTTYPE, global.typer)
            global.facechange = 1
            n += 1
        }
        if (string_char_at(originalstring, (n + 1)) == "z")
        {
            sym = real(string_char_at(originalstring, (n + 2)))
            sym_s = spr_infinitysign
            if (sym == 4)
                sym_s = spr_infinitysign
            if (sym == 4)
                draw_sprite_ext(sym_s, 0, (myx + (random(shake) - (shake / 2))), ((myy + 10) + (random(shake) - (shake / 2))), 2, 2, 0, c_white, 1)
            n += 1
        }
        n += 2
    }
    if (string_char_at(originalstring, n) == "/")
    {
        halt = true
        if (string_char_at(originalstring, (n + 1)) == "%")
            halt = 2
        if (string_char_at(originalstring, (n + 1)) == "^" &amp;&amp; string_char_at(originalstring, (n + 2)) != "0")
            halt = 4
        if (string_char_at(originalstring, (n + 1)) == "*")
            halt = 6
        break
    }
    else if (string_char_at(originalstring, n) == "%")
    {
        if (string_char_at(originalstring, (n + 1)) == "%")
        {
            instance_destroy()
            break
        }
        else
        {
            stringpos = 1
            stringno += 1
            originalstring = mystring[stringno]
            myx = writingx
            myy = writingy
            lineno = 0
            alarm[0] = textspeed
            myletter = " "
            break
        }
    }
    else
    {
        if (myx &gt; writingxend)
            script_execute(SCR_NEWLINE)
        myletter = string_char_at(originalstring, n)
        if (global.typer == 18)
        {
            if (myletter == "l" || myletter == "i")
                myx += 2
            if (myletter == "I")
                myx += 2
            if (myletter == "!")
                myx += 2
            if (myletter == ".")
                myx += 2
            if (myletter == "S")
                myx += 1
            if (myletter == "?")
                myx += 2
            if (myletter == "D")
                myx += 1
            if (myletter == "A")
                myx += 1
            if (myletter == "'")
                myx += 1
        }
        draw_set_font(myfont)
        draw_set_color(mycolor)
        if (shake &gt; 38)
        {
            if (shake == 39)
            {
                direction += 10
                draw_text((myx + hspeed), (myy + vspeed), myletter)
            }
            if (shake == 40)
                draw_text((myx + hspeed), (myy + vspeed), myletter)
            if (shake == 41)
            {
                direction += (10 * n)
                draw_text((myx + hspeed), (myy + vspeed), myletter)
                direction -= (10 * n)
            }
            if (shake == 42)
            {
                direction += (20 * n)
                draw_text((myx + hspeed), (myy + vspeed), myletter)
                direction -= (20 * n)
            }
            if (shake == 43)
            {
                direction += (30 * n)
                draw_text(((myx + (hspeed * 0.7)) + 10), (myy + (vspeed * 0.7)), myletter)
                direction -= (30 * n)
            }
        }
        else
            draw_text((myx + (random(shake) - (shake / 2))), (myy + (random(shake) - (shake / 2))), myletter)
        myx += spacing
        if (myfont == fnt_comicsans)
        {
            if (myletter == "w")
                myx += 2
            if (myletter == "m")
                myx += 2
            if (myletter == "i")
                myx -= 2
            if (myletter == "l")
                myx -= 2
            if (myletter == "s")
                myx -= 1
            if (myletter == "j")
                myx -= 1
        }
        if (myfont == fnt_papyrus)
        {
            if (myletter == "D")
                myx += 1
            if (myletter == "Q")
                myx += 3
            if (myletter == "M")
                myx += 1
            if (myletter == "L")
                myx -= 1
            if (myletter == "K")
                myx -= 1
            if (myletter == "C")
                myx += 1
            if (myletter == ".")
                myx -= 3
            if (myletter == "!")
                myx -= 3
            if (myletter == "O" || myletter == "W")
                myx += 2
            if (myletter == "I")
                myx -= 6
            if (myletter == "T")
                myx -= 1
            if (myletter == "P")
                myx -= 2
            if (myletter == "R")
                myx -= 2
            if (myletter == "A")
                myx += 1
            if (myletter == "H")
                myx += 1
            if (myletter == "B")
                myx += 1
            if (myletter == "G")
                myx += 1
            if (myletter == "F")
                myx -= 1
            if (myletter == "?")
                myx -= 3
            if (myletter == "'")
                myx -= 6
            if (myletter == "J")
                myx -= 1
        }
        n += nskip
        n += 1
        continue
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
